#define _CRT_SECURE_NO_WARNINGS
#include"game.h"
void intboard(char board[ROW][COL], int row, int col)
{
    int i = 0; int j = 0;
    for (i = 0; i < row; i++)
    {
        for (j = 0; j < col; j++)
        {
            board[i][j] = ' ';
        }
    }
}
void displayboard(char board[ROW][COL], int row, int col)
{
    char a[] = { "○" };//*
    char b[] = { "●" };//#
    int sum = 1;
    int sun1 = 1;
    //┏━┯━┯━┯━┯━┯━┯━┯━┯━┯━┓
    //┃  │　│　│　│　│　│　│　│　│　┃
    //┗━●
    for (int i = 0; i < col - 1; i++)
    {
        if (i == 0)
        {
            printf("      %d   ", sun1);
            sun1++;
        }
        printf("%d   ", sun1);
        sun1++;
    }
    printf("\n");
    for (int i = 0; i < row - 1; i++)
    {
        if (i == 0)
        {
            printf("  ┏━━━");
        }
        //printf("123");
        printf("┯━━━");
        if (i == row - 2)
        {
            printf("┯━━━┓");
        }
    }
    printf("\n");
    for (int i = 0; i < row - 1; i++)
    {
        if (i == 0)
        {
            printf("  ┃   │");
        }
        printf("　 │");
        if (i == row - 2)
        {
            printf("　 ┃");
        }
    }
    printf("\n");
    for (int j = 0; j <= col; j++)
    {
        if (j == col)
        {
            for (int i = 0; i < row; i++)
            {
                if (i == 0)
                {
                    printf("  ┗━━━");
                }
                printf("┷━━━");
                if (i == row - 1)
                {
                    printf("┛");

                }
            }
            break;
        }
        for (int i = 0; i < col; i++)
        {
            if (i == 0)
            {
                printf("%2d", sum);
                printf("┠━━-");
            }
            if (board[j][i] == '*')
            {
                if (i == col - 1)
                {
                    printf("%s━━", a);
                    goto here;
                }
                printf("%s━-", a);
            }
            if (board[j][i] == '#')
            {
                if (i == col - 1)
                {
                    printf("%s━━", b);
                    goto here;
                }
                printf("%s━-", b);
            }
            if (board[j][i] == ' ')
            {
                if (i == col - 1)
                {
                    printf("%c━━━", board[j][i]);
                    goto here;
                }
                printf("%c━━-", board[j][i]);
            }
        here:
            if (i == col - 1)
            {
                printf("┨");
                printf(" %d", sum);
            }
        }
        sum++;
        printf("\n");
        for (int i = 0; i < row - 1; i++)
        {
            if (i == 0)
            {
                printf("  ┃   │");
            }
            printf("　 │");
            if (i == row - 2)
            {
                printf("　 ┃");
            }
        }
        printf("\n");
    }
    printf("\n");
    int sun2 = 1;
    for (int i = 0; i < col - 1; i++)
    {
        if (i == 0)
        {
            printf("      %d   ", sun2);
            sun2++;
        }
        printf("%d   ", sun2);
        sun2++;
    }
    printf("\n");
}
void playmove(char board[ROW][COL], int row, int col)
{
    int x = 0;
    int y = 0;
    while (1)
    {
        scanf("%d%d", &x, &y);


        if (x <= row && x >= 1 && y <= col && y >= 1 && board[x - 1][y - 1] == ' ')
        {
            board[x - 1][y - 1] = '*';
            break;
        }
        else
        {
            printf("超出预期，重新输入");
        }

    }
}
int uni(char board[ROW][COL], int row, int col, int i, int j, int ret)
{
    int sun = 0;
    if (ret == 0)
    {
        if (board[i][j - 1] == '#')//左 1   //0无相
        {
            sun += 4; ret = 1;
            sun + uni(board, row, col, i, j - 1, ret);
        }
        else
        {
            if (board[i][j - 1] == '*')
            {
                sun += 2;
            }
            if (board[i][j - 1] == ' ')
            {
                sun++;
            }
        }
        if (board[i][j + 1] == '#')//右2
        {
            sun += 4; ret = 2;
            sun + uni(board, row, col, i, j + 1, ret);
        }
        else
        {
            if (board[i][j + 1] == '*')
            {
                sun += 2;
            }
            if (board[i][j + 1] == ' ')
            {
                sun++;
            }
        }
        if (board[i - 1][j] == '#')//上3
        {
            sun += 4; ret = 3;
            sun + uni(board, row, col, i - 1, j, ret);
        }
        else
        {
            if (board[i - 1][j] == '*')
            {
                sun += 2;
            }
            if (board[i - 1][j] == ' ')
            {
                sun++;
            }
        }
        if (board[i + 1][j] == '#')//下4
        {
            sun += 4; ret = 4;
            sun + uni(board, row, col, i + 1, j, ret);
        }
        else
        {
            if (board[i + 1][j] == '*')
            {
                sun += 2;
            }
            if (board[i + 1][j] == ' ')
            {
                sun++;
            }
        }
        if (board[i - 1][j - 1] == '#')//左上5
        {
            sun += 4; ret = 5;
            sun + uni(board, row, col, i - 1, j - 1, ret);
        }
        else
        {
            if (board[i - 1][j - 1] == '*')
            {
                sun += 2;
            }
            if (board[i - 1][j - 1] == ' ')
            {
                sun++;
            }
        }
        if (board[i + 1][j - 1] == '#')//左下6
        {
            sun += 4; ret = 6;
            sun + uni(board, row, col, i + 1, j - 1, ret);
        }
        else
        {
            if (board[i + 1][j - 1] == '*')
            {
                sun += 2;
            }
            if (board[i + 1][j - 1] == ' ')
            {
                sun++;
            }
        }
        if (board[i - 1][j + 1] == '#')//右上7
        {
            sun += 4; ret = 7;
            sun + uni(board, row, col, i - 1, j + 1, ret);
        }
        else
        {
            if (board[i - 1][j + 1] == '*')
            {
                sun += 2;
            }
            if (board[i - 1][j + 1] == ' ')
            {
                sun++;
            }
        }
        if (board[i + 1][j + 1] == '#')//右下8
        {
            sun += 4; ret = 8;
            sun + uni(board, row, col, i + 1, j + 1, ret);
        }
        else
        {
            if (board[i + 1][j + 1] == '*')
            {
                sun += 2;
            }
            if (board[i + 1][j + 1] == ' ')
            {
                sun++;
            }
        }


    }
    if (ret == 1)
    {
        if (board[i][j - 1] == '#')
        {
            sun += 4; ret = 1;
            return sun + uni(board, row, col, i, j - 1, ret);
        }
        else
        {
            if (board[i][j - 1] == '*')
            {
                sun += 2;
                return sun;
            }
            if (board[i][j - 1] == ' ')
            {
                sun++;
                return sun;
            }
        }
    }
    if (ret == 2)
    {
        if (board[i][j + 1] == '#')
        {
            sun += 4; ret = 2;
            return sun + uni(board, row, col, i, j + 1, ret);
        }
        else
        {
            if (board[i][j + 1] == '*')
            {
                sun += 2;
                return sun;
            }
            if (board[i][j + 1] == ' ')
            {
                sun++;
                return sun;
            }
        }
    }
    if (ret == 3)
    {
        if (board[i - 1][j] == '#')
        {
            sun += 4; ret = 3;
            return sun + uni(board, row, col, i - 1, j, ret);
        }
        else
        {
            if (board[i - 1][j] == '*')
            {
                sun += 2;
                return sun;
            }
            if (board[i - 1][j] == ' ')
            {
                sun++;
                return sun;
            }
        }
    }
    if (ret == 4)
    {
        if (board[i + 1][j] == '#')
        {
            sun += 4; ret = 4;
            return sun + uni(board, row, col, i + 1, j, ret);
        }
        else
        {
            if (board[i + 1][j] == '*')
            {
                sun += 2;
                return sun;
            }
            if (board[i + 1][j] == ' ')
            {
                sun++;
                return sun;
            }
        }
    }
    if (ret == 5)
    {
        if (board[i - 1][j - 1] == '#')
        {
            sun += 4; ret = 5;
            return sun + uni(board, row, col, i - 1, j - 1, ret);
        }
        else
        {
            if (board[i - 1][j - 1] == '*')
            {
                sun += 2;
                return sun;
            }
            if (board[i - 1][j - 1] == ' ')
            {
                sun++;
                return sun;
            }
        }
    }
    if (ret == 6)
    {
        if (board[i + 1][j - 1] == '#')
        {
            sun += 4; ret = 6;
            return sun + uni(board, row, col, i + 1, j - 1, ret);
        }
        else
        {
            if (board[i + 1][j - 1] == '*')
            {
                sun += 2;
                return sun;
            }
            if (board[i + 1][j - 1] == ' ')
            {
                sun++;
                return sun;
            }
        }
    }
    if (ret == 7)
    {
        if (board[i - 1][j + 1] == '#')
        {
            sun += 4; ret = 7;
            return sun + uni(board, row, col, i - 1, j + 1, ret);
        }
        else
        {
            if (board[i - 1][j + 1] == '*')
            {
                sun += 2;
                return sun;
            }
            if (board[i - 1][j + 1] == ' ')
            {
                sun++;
                return sun;
            }
        }
    }
    if (ret == 8)
    {
        if (board[i + 1][j + 1] == '#')
        {
            sun += 4; ret = 8;
            return sun + uni(board, row, col, i + 1, j + 1, ret);
        }
        else
        {
            if (board[i + 1][j + 1] == '*')
            {
                sun += 2;
                return sun;
            }
            if (board[i + 1][j + 1] == ' ')
            {
                sun++;
                return sun;
            }
        }
    }
    return sun;
}
void pcmove(char board[ROW][COL], int row, int col)
{
    int max = 0;
    int q = 0;
    int w = 0;
    //1:空格   2:   自己旗子   3:电脑棋子
    int i = 0;
    int j = 0;
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 10; j++)
        {
            if (board[i][j] == ' ')
            {
                int ret = 0;
                int sun = uni(board, ROW, COL, i, j, ret);
                if (sun > max)
                {
                    max = sun;
                    q = i;
                    w = j;
                }
            }
        }
    }
    //max
    board[q][w] = '#';
}
/*int isfull(char board[ROW][COL], int row, int col)
{
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
        {
            if (board[i][j] == ' ')
            {
                return 1;
            }
        }
    }
    return 0;
}
*/
char iswin(char board[ROW][COL], int row, int col)
{
    int i = 0;
    int j = 0;
    for (i = 0; i < 10; i++)
    {
        for (j = 0; j < 10; j++)
        {
            if (board[i][j] != ' ')
            {
                if (board[i][j] == board[i][j + 1] && board[i][j + 1] == board[i][j + 2] && board[i][j + 2] == board[i][j + 3] && board[i][j + 3] == board[i][j + 4] && j >= 0 && j <= 9)
                {
                    return board[i][j];
                }
                if (board[i][j] == board[i + 1][j] && board[i + 1][j] == board[i + 2][j] && board[i + 2][j] == board[i + 3][j] && board[i + 3][j] == board[i + 4][j] && i >= 0 && i <= 9)
                {
                    return board[i][j];
                }
                if (board[i][j] == board[i + 1][j + 1] && board[i + 1][j + 1] == board[i + 2][j + 2] && board[i + 2][j + 2] == board[i + 3][j + 3] && board[i + 3][j + 3] == board[i + 4][j + 4] && i >= 0 && i <= 9 && j >= 0 && j <= 9)
                {
                    return board[i][j];
                }
                if (board[i][j] == board[i + 1][j - 1] && board[i + 1][j - 1] == board[i + 2][j - 2] && board[i + 2][j - 2] == board[i + 3][j - 3] && board[i + 3][j - 3] == board[i + 4][j - 4] && i >= 0 && i <= 9 && j >= 0 && j <= 9)
                {
                    return board[i][j];
                }
            }
        }
    }
    return 'C';
}